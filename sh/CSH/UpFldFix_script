#!/bin/csh
#***********************************************************************
#*
#*                  UpFldFix_script
#*
#* Goal: 
#*
#* Parametri passati: $1 cod_opzione
#*                    $2 Progetto
#*                    $3 Comitver
#*                    $4 Numero di task
#*                    $5 Assegnatario
#*
#* Author: Luca Brizzolara, luciano Giovannini Mar 2000
#*
#***********************************************************************

#***********************************************************************
# Impostazione delle variabili.
#***********************************************************************

set Progetto = $2
set NumConsegna = $3
set Ntask  = $4
set Risolutore = $5
set VER = `echo ${Progetto}${NumConsegna} |awk '{ print substr($1,1,5) }'`
set data   = `date +"%d-%m-%y"`
set datatime = `date +"%d %h %Y"`
set SWD_ROOT = "/usr/CONT_SRV/SWD_GPM"
set WA_ROOT  = "/usr/CONT_SRV/ccm_wa/DB_GPM"
set CCM45_DB = "/usr/CONT_SRV/ccmdb/DB_GPM"
set EXE_DIR = "${CCM45_DB}/lib/notify/Unix"
set CCM45_DBlog = "${CCM45_DB}/lib/notify/log"
set CpkFtp_Recovery = 0
set cpk_error = 0                      
set DTM_PROJECTS = "SHE SIS SQL FRM FMX"

#***********************************************************************
# Nel caso ci sia un LOCK, controllo se sono in presenza di una 
# estrazione rilanciata per un errore nella parte ftp. In caso
# affermativo salto tutta la prima parte per andare direttamente alla
# script che fa l'ftp del software.
#***********************************************************************
if (-f ${CCM45_DBlog}/SWD_UPDATE.FIX.LOCK) then
  if (`cat ${CCM45_DBlog}/SWD_UPDATE.FIX.LOCK | grep -c ERROR:`) then
    set Ntask  = `cat ${CCM45_DBlog}/SWD_UPDATE.FIX.LOCK | awk -F"~" '{print ($2)}'`
    set CpkFtp_Recovery = 1
    goto CpkFtpErr_Recovery
  endif
#***********************************************************************
# In caso non sia in fase di recupero di estrazione, ho un errore(checkin
# contemporanee).
# Per cui creo un nuovo task sulla stessa consegna, per potere poi
# riscatenare una nuova migrazione.
#***********************************************************************
  setenv CCM_ADDR `ccm start -m -q -nogui -r build_mgr  -d ${CCM45_DB}`
  set NewTask = `ccm create_task -s "Task per recupero estrazione FIX ${Progetto}${NumConsegna}" -r chk_dtm -platform HPUX-DB_GPM -release Any -subsystem ${Progetto} | awk '{print ($2)}'`
  ccm query -t task -n task${NewTask}
  ccm attr -c cod_opzione -t string -v "NoAction" @1
  ccm attr -c comitver -t string -v ${NumConsegna} @1
  ccm attr -m status -v "task_assigned" @1
  ccm attr -c cod_opzione -t string -v "Migraz.Fix" @1
  ccm stop
  exit 0
else
#***********************************************************************
# In caso di nuova estrazione pulisco i file temporanei che utilizzero'
#***********************************************************************
  cat /dev/null > ${CCM45_DBlog}/SWD_UPDATE.FIX.LOCK
endif


setenv CCM_ADDR `ccm start -m -q -nogui -r build_mgr  -d ${CCM45_DB}`
#***********************************************************************
# Creo un task di estrazione da assegnare a swd_dtm
#***********************************************************************
  set Ntask = `ccm create_task -s "$1 ${Progetto}${NumConsegna} ${datatime}" -r ccm_root -platform HPUX-DB_GPM -release Any -subsystem ${Progetto} | awk '{print ($2)}'`
  ccm query -t task -n task${Ntask}
  ccm attr -c cod_opzione -t string -v "$1" @1
  ccm attr -c comitver -t string -v "FIX" @1
  ccm attr -m resolver -v " " @1
  echo `date` "-TASK${Ntask}- $1 ${Progetto}${NumConsegna} ${datatime}" >>&/$CCM45_DBlog/ErrMsg
ccm stop


#***********************************************************************
# Sposto il contenuto dell'estrazione precedente in ${ambiente}.sav
#***********************************************************************
if (-d ${SWD_ROOT}/FIX) then
  if (-d ${SWD_ROOT}/FIX.sav) then
    rm -rf ${SWD_ROOT}/FIX.sav
  endif
  mv ${SWD_ROOT}/FIX ${SWD_ROOT}/FIX.sav
endif

#***********************************************************************
# Ricerco i tasks di migrazione FIX DTM.
#***********************************************************************
setenv CCM_ADDR `ccm start -m -q -nogui -r build_mgr  -d ${CCM45_DB}`
 ccm set role ccm_admin
 set Cons_Fix = "$2$3"

 if ($2 == "DTM") then
    foreach DTM_type (${DTM_PROJECTS})
     if (-f $CCM45_DBlog/Delta.${DTM_type}${NumConsegna} ) then   
       set Cons_Fix = "${Cons_Fix} ${DTM_type}${NumConsegna}"
     endif
    end
 endif
    
    foreach Consegna (${Cons_Fix})
      set Progetto = `echo ${Consegna} |awk '{print substr($1,1,3)}'`
      set NumConsegna = `echo ${Consegna} |awk '{print substr($1,4,5)}'`
      set provaq = `ccm query "cvtype='task' and task_subsys='${Progetto}' and comitver='${NumConsegna}'" |wc -l` 

      if (`ccm query "cvtype='task' and task_subsys='${Progetto}' and comitver='${NumConsegna}'" |wc -l` > 1) then
       set TaskMig_Fix = `ccm query "cvtype='task' and task_subsys='${Progetto}' and comitver='${NumConsegna}' and creator='mig_dtm'" |awk '{ print $2 }'`
      else
        set TaskMig_Fix = `ccm query "cvtype='task' and task_subsys='${Progetto}' and comitver='${NumConsegna}'"|awk '{ print $2 }'`
      endif

#***********************************************************************
# Creo il task ghost
#***********************************************************************
      set TaskGhost = `ccm create_task -s "${Consegna}~FIX" -platform HPUX-DB_GPM -release ${VER} -subsystem ${Progetto} |awk '{print ($2)}'`
      ccm query -t task -name task${TaskGhost}
      ccm attr -c comitver -t string -v "${NumConsegna}" @1
      ccm attr -c cod_opzione -t string -v "FIX" @1
      echo "${TaskGhost}-${Progetto}${NumConsegna}" >> ${CCM45_DBlog}/UpFldSWD.task${Ntask}.FIX

#***********************************************************************
# Cerco gli oggetti associati al task di migrazione e li associo al
# task ghost.
#***********************************************************************
      ccm query "is_associated_object_of('task${TaskMig_Fix}~1:task:probtrac')" -u -f "ccm relate -n associated_cv -from task${TaskGhost}~1:task:probtrac -to %objectname" > ${CCM45_DBlog}/Extract.${Progetto}$5
      source ${CCM45_DBlog}/Extract.${Progetto}$5
      rm ${CCM45_DBlog}/Extract.${Progetto}$5

#***********************************************************************                        
#* Estrazione FIX                                                                               
#***********************************************************************                        
                                                                                                
      #setenv CCM_ADDR `ccm start -m -q -nogui -r build_mgr  -d ${CCM45_DB}`

      ccm work_area -wa -setpath ${WA_ROOT} -p ${Progetto}~FIX
      ccm sync -p ${Progetto}~FIX
      set delta_file = "${CCM45_DBlog}/Delta.${Progetto}${NumConsegna}"
      cat ${delta_file} |grep ccm |grep relate |grep -v ":dir:"|awk '{ print $8 }'|xargs ${EXE_DIR}/cpCCMfl_script ${SWD_ROOT} ${WA_ROOT} ${Progetto} FIX

    end
ccm stop 

if !(-d ${SWD_ROOT}/FIX) then                                 
  ccm del task${Ntask}~1:task:probtrac >>&/$CCM45_DBlog/ErrMsg
  ccm stop
  exit 0
endif

#***********************************************************************
# Se ho estratto qualcosa inizio a fare l'ftp
#***********************************************************************

CpkFtpErr_Recovery:
 
  if ($CpkFtp_Recovery) then
    setenv CCM_ADDR `ccm start -m -q -nogui -r ccm_admin -d ${CCM45_DB}`
    ccm query -t task -name task${Ntask}
    ccm attr -m resolver -v " " @1
  endif
            
  ccm stop


  ${EXE_DIR}/ParserScript ${SWD_ROOT} FIX
  set cpk_error = ${status}

#***********************************************************************
# Ricavo dal response.txt la description (sia in caso di esito positivo
# che di errore).
#***********************************************************************
  if !(${cpk_error}) then
    set CpkzipRes = "`head -n 50 ${SWD_ROOT}/FIX/response.txt`"
  else
    set CpkzipRes = "`head -n 9  ${SWD_ROOT}/FIX/response.txt`"
  endif
#***********************************************************************
# Setto la task_description del task. 
#***********************************************************************
  setenv CCM_ADDR `ccm start -m -q -nogui -r ccm_admin -d ${CCM45_DB}`
  ccm query -t task -name task${Ntask}
  ccm attr -c task_description -t string -v "${CpkzipRes}" @1
  if (${status}) then
    ccm attr -m task_description -v "${CpkzipRes}" @1
  endif
 

#***********************************************************************
# Setto la task_synopsis del task in caso di esito positivo. Riassegno
# il task modificandone temporaneamente il cod_opzione per evitare
# indesiderati eventi di trigger.
#***********************************************************************
  if !(${cpk_error}) then
    set synps = `ccm query -t task -n task${Ntask} -u -f "%task_synopsis"`
    if (`echo ${synps} | grep -c "~"`) then
      set synps = `echo ${synps} | awk -F"~" '{print ($2)}'`
      ccm attr -m task_synopsis -v "${synps}" @1
      set errsynps = `echo ${synps} | awk -F"~" '{print ($1)}'`
      ccm attr -m cod_opzione -v "Recovering" @1
      ccm attr -m status -v "task_assigned" @1
      ccm attr -m cod_opzione -v "$1" @1
    endif

#***********************************************************************
# Lego attraverso l'attributo jolly il task di estrazione con quello
# di distribuzione.
#***********************************************************************
    ccm query -t task -name task${Ntask}
    ccm attr -c jolly -t string -v "${CCM45_DBlog}/UpFldSWD.task${Ntask}.FIX" @1
    if (${status}) then
      ccm attr -m jolly -v "${CCM45_DBlog}/UpFldSWD.task${Ntask}.FIX" @1
    endif
    ccm attr -m release -v "Any" @1
    ccm attr -m resolver -v swd_dtm @1
    ccm query -t task -name task${Ntask}
  else

#***********************************************************************
# In caso di errore setto opportunamente le synopsis e lascio il
# task di estrazione in stato registered.
#***********************************************************************
    if (${CpkFtp_Recovery}) then
      set synps = `ccm query -t task -n task${Ntask} -u -f "Ftp Error: ${cpk_error}. %task_synopsis"`
    else
      set synps = `ccm query -t task -n task${Ntask} -u -f "Ftp Error: ${cpk_error}. L'utente ${Risolutore} deve riassegnare il task per continuare ~%task_synopsis"`
    endif
    ccm attr -m task_synopsis -v "${synps}" @1
    ccm attr -m status -v registered @1
    ccm attr -m release -v "Estraz.Recovery" @1
    echo "ERROR: Cpkftp ${cpk_error}, ~${Ntask}" > ${CCM45_DBlog}/SWD_UPDATE.FIX.LOCK
    echo "Warning: Controllare il campo commento del task ${Ntask}" >>&/$CCM45_DBlog/ErrMsg 
    ccm attr -m resolver -v ${cmenv}_sesi @1
  endif

ccm stop

#***********************************************************************
# Cancello i file di LOCK.
#***********************************************************************
if !(${cpk_error}) then
  rm ${CCM45_DBlog}/SWD_UPDATE.FIX.LOCK
endif

