#!/bin/csh
#***********************************************************************
#* ExtractSWD_script 
#*
#* Questa script e' chiamata da Trig_eng.def, quando un utente 
#* abilitato (csu_sesi, sqa_sesi, prd_sesi), crea il task di estrazione
#* da interfaccia grafica e tale task gli viene di conseguenza 
#* assegnato ("task_assigned").
#* 
#* Delta Extraction IBM AIX CSHELL Script for Software Distribution 
#*
#* Author: Cavana Carlo 1998
#*
#***********************************************************************

# **********************************************************************
# Parametri passati da Trig_eng.def:                              
#
# cod_opzione ($1): es. Estraz.Delta                             
# task_subsys ($2): es. Any, CAS ecc.                            
# comitver    ($3): es. SQA, PRD ecc.                          
# task_number ($4): es. 6622, ecc.                                 
# task_synopsis ($5): es. Estraz.Delta Any PRD 10 Feb 00         
# creator ($6): es. prd_sesi                                     
# resolver ($7): es. prd_sesi                                    
# prerequisiti ($8)                                              
# corequisiti  ($9)                                              
# release ($10): es. Any, CAS20                                  
# - commento di Romanini -                                                   
# **********************************************************************


if ($1 != "Estraz.Delta" && $1 != "Estraz.Master") then
  exit 0
endif


# **********************************************************************
# Imposta le variabili iniziali 
# - commento di Romanini -                                                   
# **********************************************************************

set CCM45_DB = "/usr/CONT_SRV/ccmdb/DB_FIL"
set EXE_DIR = "${CCM45_DB}/lib/notify/Unix"
set CCM45_DBlog = "${CCM45_DB}/lib/notify/log"
set ENVR = `echo $6 | awk '{print toupper($1)}' FS="_"` 

# **********************************************************************
# Se l'attributo "release" del task di estrazione e' "Estraz.Recovery"    
# allora siamo nel caso di recupero errore zip dell'estrazione precedente.
# - commento di Romanini -                                                   
# **********************************************************************

if ($10 == "Estraz.Recovery") then
  set ENVR = `echo $7 | awk '{print toupper($1)}' FS="_"` 
  if ($3 != ${ENVR}) then 
    echo "MSG:Operazione NON consentita. Utente non previsto"
    echo "MSG: "
    exit 1
  endif
  echo "MSG:`cat ${CCM45_DBlog}/SWD_UPDATE.${ENVR}.LOCK`"
  echo "MSG: "
  echo "MSG:.... recupero errore attivato." 
  goto good_tsk
endif


                                                                          
# **********************************************************************  
# Se esiste il file SWD_UPDATE.${ambiente}.LOCK (es. SWD_UPDATE.CSU.LOCK),     
# allora e' gia' in corso un'estrazione per quell'ambiente.
# - commento di Romanini -                                                
# **********************************************************************  
if (-f ${CCM45_DBlog}/SWD_UPDATE.${ENVR}.LOCK) then
  echo "MSG:Estrazione SW ${ENVR} in corso."
  echo "MSG: "
  echo "MSG:Il Task$4 sara' Eliminato. Premere 'Close'"
  echo "ERROR_MSG:Task$4 Deleted" >>&/$CCM45_DBlog/ErrMsg
  goto bad_task
endif



if ($6 != csu_sesi && $6 != sqa_sesi && $6 != prd_sesi ) then
  echo "MSG:$6 NON abilitato a $1."
  echo "MSG: " 
  if ($6 == ccm_root) then
    echo "MSG:Operazione NON consentita."
    echo "MSG: "
    exit 1
  endif
  echo "MSG:Il Task$4 sara' Eliminato. Premere 'Close'"
  echo "ERROR_MSG:Task$4 Deleted" >>&/$CCM45_DBlog/ErrMsg
  goto bad_task
endif


goto good_tsk
 

# **********************************************************************
# Check is failed. Remove current task (CCM45 Session must be external)
# **********************************************************************

bad_task:

cat > ${CCM45_DBlog}/tsk$4 <<!

setenv CCM_ADDR \`ccm start -m -q -nogui -r ccm_admin  -d ${CCM45_DB}\`

ccm del task$4~1:task:probtrac
ccm stop
rm ${CCM45_DBlog}/tsk$4 &
!
source ${CCM45_DBlog}/tsk$4 &
exit 0



# **********************************************************************
# Check is OK. (CCM45 Session will be external, see UpFldSWD_script)
# **********************************************************************

good_tsk:

echo "MSG:  " 
echo "MSG: Inoltrato richesta $1 $2 per ambiente ${ENVR} "
echo "MSG:  " 

${EXE_DIR}/UpFldSWD_script ${ENVR} "UpDate" $2 $1 $4 &


